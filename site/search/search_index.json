{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MetaKG Tutorial MetaKG is the first metabolite-centric knowledge graph to date that serves as a comprehensive repository of metabolite-centric information. At its core, MetaKG is a sophisticated knowledge graph meticulously constructed to illuminate the intricate relationships between metabolites and a myriad of biological entities such as genes, proteins, diseases, and pathways. Here's a concise introduction to MetaKG: Metabolite-Centric Focus : MetaKG revolves around metabolites, which are small molecules crucial for various biological processes. By placing metabolites at the center of its framework, MetaKG provides a holistic view of their interactions and associations within biological systems. Multi-Modal Integration : MetaKG integrates data from diverse sources, including established databases such as HMDB, KEGG, SMPDB, ChEBI, PubChem, and UniProt, among others. By consolidating information from these reputable sources, MetaKG offers a comprehensive and up-to-date resource for researchers and data scientists. Knowledge Graph Architecture : Built upon a knowledge graph architecture, MetaKG organizes information in a structured and interconnected manner. This graph-based representation facilitates seamless exploration and analysis of metabolite-centric data, enabling users to uncover meaningful insights and correlations. Representation Learning : MetaKG facilitates representation learning, a crucial aspect of data analysis and machine learning. By leveraging the structured information within the knowledge graph, researchers can apply representation learning techniques to extract meaningful features and embeddings that capture the inherent relationships and patterns among metabolites and other biological entities. These learned representations enable more effective analysis, classification, and prediction tasks, contributing to a deeper understanding of metabolomics data. Database Reproduction : Another important aspect of MetaKG is its potential to serve as a foundation for reproducing and validating existing databases. By consolidating information from various sources and providing a coherent representation of metabolite-centric knowledge, MetaKG offers a standardized framework for assessing the accuracy and completeness of individual databases. Researchers can compare the data within MetaKG to specific databases, identifying discrepancies, inconsistencies, or missing information. This process not only ensures the integrity of existing databases but also fosters transparency and reproducibility within the scientific community. Continuous Updates : MetaKG is continuously curated and updated to ensure the inclusion of the latest findings and advancements in metabolomics research. This commitment to staying current ensures that MetaKG remains a reliable and relevant resource for the scientific community. In essence, MetaKG empowers researchers, developers, and data scientists to navigate the complex landscape of metabolite-centric knowledge with precision and confidence. Whether unraveling the mechanisms of disease, discovering new therapeutic targets, or advancing our understanding of biological systems, MetaKG serves as an indispensable tool for driving scientific progress in the field of metabolomics. For MetaKG website visit metakg.xyz . For MetaKG code visit github.com/YuxingLu613/metakg . For MetaKG Python package visit pypi.org/project/metakg/ . For Meta2Vec Python package visit pypi.org/project/meta2vec/ . For other resources please visit metakg.xyz/resource . Or you can contact yxlu0613@gmail.com for more help ^_^. Table of Contents Home Overview of MetaKG MetaKG Python Package Quick Start Installation Construction Query and Search Biological Analysis Representation Training MetaKGE Meta2Vec Embedding KG Completion Hypothesis Generation Updation with LLM MetaKG Website Introduction Graph Visualization Database Browse Search Inference Downloadable Resources Open Resources Open Resources Acknowledgement To be added How to cite To be added","title":"Home"},{"location":"#welcome-to-metakg-tutorial","text":"MetaKG is the first metabolite-centric knowledge graph to date that serves as a comprehensive repository of metabolite-centric information. At its core, MetaKG is a sophisticated knowledge graph meticulously constructed to illuminate the intricate relationships between metabolites and a myriad of biological entities such as genes, proteins, diseases, and pathways. Here's a concise introduction to MetaKG: Metabolite-Centric Focus : MetaKG revolves around metabolites, which are small molecules crucial for various biological processes. By placing metabolites at the center of its framework, MetaKG provides a holistic view of their interactions and associations within biological systems. Multi-Modal Integration : MetaKG integrates data from diverse sources, including established databases such as HMDB, KEGG, SMPDB, ChEBI, PubChem, and UniProt, among others. By consolidating information from these reputable sources, MetaKG offers a comprehensive and up-to-date resource for researchers and data scientists. Knowledge Graph Architecture : Built upon a knowledge graph architecture, MetaKG organizes information in a structured and interconnected manner. This graph-based representation facilitates seamless exploration and analysis of metabolite-centric data, enabling users to uncover meaningful insights and correlations. Representation Learning : MetaKG facilitates representation learning, a crucial aspect of data analysis and machine learning. By leveraging the structured information within the knowledge graph, researchers can apply representation learning techniques to extract meaningful features and embeddings that capture the inherent relationships and patterns among metabolites and other biological entities. These learned representations enable more effective analysis, classification, and prediction tasks, contributing to a deeper understanding of metabolomics data. Database Reproduction : Another important aspect of MetaKG is its potential to serve as a foundation for reproducing and validating existing databases. By consolidating information from various sources and providing a coherent representation of metabolite-centric knowledge, MetaKG offers a standardized framework for assessing the accuracy and completeness of individual databases. Researchers can compare the data within MetaKG to specific databases, identifying discrepancies, inconsistencies, or missing information. This process not only ensures the integrity of existing databases but also fosters transparency and reproducibility within the scientific community. Continuous Updates : MetaKG is continuously curated and updated to ensure the inclusion of the latest findings and advancements in metabolomics research. This commitment to staying current ensures that MetaKG remains a reliable and relevant resource for the scientific community. In essence, MetaKG empowers researchers, developers, and data scientists to navigate the complex landscape of metabolite-centric knowledge with precision and confidence. Whether unraveling the mechanisms of disease, discovering new therapeutic targets, or advancing our understanding of biological systems, MetaKG serves as an indispensable tool for driving scientific progress in the field of metabolomics. For MetaKG website visit metakg.xyz . For MetaKG code visit github.com/YuxingLu613/metakg . For MetaKG Python package visit pypi.org/project/metakg/ . For Meta2Vec Python package visit pypi.org/project/meta2vec/ . For other resources please visit metakg.xyz/resource . Or you can contact yxlu0613@gmail.com for more help ^_^.","title":"Welcome to MetaKG Tutorial"},{"location":"#table-of-contents","text":"Home Overview of MetaKG","title":"Table of Contents"},{"location":"#metakg-python-package","text":"Quick Start Installation Construction Query and Search Biological Analysis Representation Training MetaKGE Meta2Vec Embedding KG Completion Hypothesis Generation Updation with LLM","title":"MetaKG Python Package"},{"location":"#metakg-website","text":"Introduction Graph Visualization Database Browse Search Inference Downloadable Resources","title":"MetaKG Website"},{"location":"#open-resources","text":"Open Resources","title":"Open Resources"},{"location":"#acknowledgement","text":"To be added","title":"Acknowledgement"},{"location":"#how-to-cite","text":"To be added","title":"How to cite"},{"location":"Overview%20of%20MetaKG/","text":"Overview of MetaKG What is MetaKG MetaKG is the abbreviation of Metabolite-centric Knowledge Graph. It is a knowledge graph that is centered around metabolites and their associations with other entities such as genes, proteins, diseases, and pathways. MetaKG is a multi-modal knowledge graph that integrates information from various sources including databases, literature, and ontologies. MetaKG is designed to be a comprehensive and up-to-date resource for metabolite-centric knowledge. What is the source of MetaKG MetaKG is constructed by integrating information from various sources including databases, literature, and ontologies. The sources of MetaKG include but are not limited to the following: - HMDB (The Human Metabolome Database) - HMDB is a comprehensive, web-accessible metabolite database. It contains detailed information about small molecule metabolites found in the human body. KEGG (Kyoto Encyclopedia of Genes and Genomes) - KEGG is a collection of databases dealing with genomes, biological pathways, diseases, drugs, and chemical substances. SMPDB (Small Molecule Pathway Database) - SMPDB is an interactive, visual database containing more than 600 small molecule pathways found in humans. ChEBI (Chemical Entities of Biological Interest) - ChEBI is a database and ontology of chemical entities of biological interest. PubChem - PubChem is a database of chemical molecules and their activities against biological assays. FooDB - FooDB is the world's largest and most comprehensive resource on food constituents, chemistry, and biology. UniProt - UniProt is a freely accessible database of protein sequence and functional information. We use the data from these sources to construct MetaKG. We also use the literature to extract some information about metabolite associations from scientific articles both manually and automatically. HMDB, KEGG and SMPDB are the primary sources of metabolite information in MetaKG. We use the data from these sources to construct the MetaKG. What is the purpose of MetaKG MetaKG stands as an indispensable bastion of metabolite-centric knowledge, meticulously curated and continuously updated to serve as the go-to wellspring for researchers, developers, and data scientists alike. Its robust architecture empowers users to delve deep into the intricate realm of metabolomics, facilitating a spectrum of endeavors, including but not limited to: Metabolite-centric Knowledge Graph Construction : Seamlessly construct comprehensive knowledge graphs elucidating the intricate relationships between metabolites and their biological contexts. Metabolite-centric Statistical Analysis : Harness the power of statistical methods tailored specifically for metabolomic data, unveiling patterns, trends, and insights that drive groundbreaking discoveries. Metabolomic and Biological Search : Navigate vast repositories of metabolomic and biological data with precision and efficiency, uncovering relevant information crucial for advancing research and understanding complex biological systems. Metabolite Association Analysis : Unravel the intricate web of associations between metabolites, diseases, genetic factors, and environmental influences, shedding light on underlying mechanisms and potential therapeutic targets. Metabolite-centric Entity Representation and Visualization : Transform raw data into intuitive visualizations and representations, facilitating comprehension and communication of complex metabolite-centric concepts. Metabolite-centric Machine Learning and Deep Learning : Leverage cutting-edge machine learning and deep learning algorithms tailored for metabolomic data analysis, unlocking predictive insights and accelerating discovery. Knowledge Graph Completion and Prediction : Enhance existing knowledge graphs and predict novel associations and interactions, paving the way for hypothesis generation and experimental validation. High-Quality Hypothesis Generation and Validation : Empower hypothesis generation with a foundation built upon comprehensive metabolite-centric knowledge, facilitating rigorous validation and driving scientific progress. And Beyond : Constantly evolving to meet the dynamic needs of the scientific community, MetaKG stands ready to support a myriad of endeavors aimed at unraveling the mysteries of metabolomics and advancing our understanding of biological systems. With MetaKG as their compass, researchers, developers, and data scientists embark on a journey of discovery, armed with the insights and tools needed to navigate the intricate landscape of metabolite-centric knowledge. How can you use MetaKG MetaKG is available as a website and a python package. You can use the website to search for metabolites and their associations with other entities. You can also use the python package to access the data programmatically. The python package provides an easy-to-use API to access the data in MetaKG. You can use the python package to construct knowledge graphs, train machine learning models, and perform statistical analysis on metabolite-centric data.","title":"Overview of MetaKG"},{"location":"Overview%20of%20MetaKG/#overview-of-metakg","text":"","title":"Overview of MetaKG"},{"location":"Overview%20of%20MetaKG/#what-is-metakg","text":"MetaKG is the abbreviation of Metabolite-centric Knowledge Graph. It is a knowledge graph that is centered around metabolites and their associations with other entities such as genes, proteins, diseases, and pathways. MetaKG is a multi-modal knowledge graph that integrates information from various sources including databases, literature, and ontologies. MetaKG is designed to be a comprehensive and up-to-date resource for metabolite-centric knowledge.","title":"What is MetaKG"},{"location":"Overview%20of%20MetaKG/#what-is-the-source-of-metakg","text":"MetaKG is constructed by integrating information from various sources including databases, literature, and ontologies. The sources of MetaKG include but are not limited to the following: - HMDB (The Human Metabolome Database) - HMDB is a comprehensive, web-accessible metabolite database. It contains detailed information about small molecule metabolites found in the human body. KEGG (Kyoto Encyclopedia of Genes and Genomes) - KEGG is a collection of databases dealing with genomes, biological pathways, diseases, drugs, and chemical substances. SMPDB (Small Molecule Pathway Database) - SMPDB is an interactive, visual database containing more than 600 small molecule pathways found in humans. ChEBI (Chemical Entities of Biological Interest) - ChEBI is a database and ontology of chemical entities of biological interest. PubChem - PubChem is a database of chemical molecules and their activities against biological assays. FooDB - FooDB is the world's largest and most comprehensive resource on food constituents, chemistry, and biology. UniProt - UniProt is a freely accessible database of protein sequence and functional information. We use the data from these sources to construct MetaKG. We also use the literature to extract some information about metabolite associations from scientific articles both manually and automatically. HMDB, KEGG and SMPDB are the primary sources of metabolite information in MetaKG. We use the data from these sources to construct the MetaKG.","title":"What is the source of MetaKG"},{"location":"Overview%20of%20MetaKG/#what-is-the-purpose-of-metakg","text":"MetaKG stands as an indispensable bastion of metabolite-centric knowledge, meticulously curated and continuously updated to serve as the go-to wellspring for researchers, developers, and data scientists alike. Its robust architecture empowers users to delve deep into the intricate realm of metabolomics, facilitating a spectrum of endeavors, including but not limited to: Metabolite-centric Knowledge Graph Construction : Seamlessly construct comprehensive knowledge graphs elucidating the intricate relationships between metabolites and their biological contexts. Metabolite-centric Statistical Analysis : Harness the power of statistical methods tailored specifically for metabolomic data, unveiling patterns, trends, and insights that drive groundbreaking discoveries. Metabolomic and Biological Search : Navigate vast repositories of metabolomic and biological data with precision and efficiency, uncovering relevant information crucial for advancing research and understanding complex biological systems. Metabolite Association Analysis : Unravel the intricate web of associations between metabolites, diseases, genetic factors, and environmental influences, shedding light on underlying mechanisms and potential therapeutic targets. Metabolite-centric Entity Representation and Visualization : Transform raw data into intuitive visualizations and representations, facilitating comprehension and communication of complex metabolite-centric concepts. Metabolite-centric Machine Learning and Deep Learning : Leverage cutting-edge machine learning and deep learning algorithms tailored for metabolomic data analysis, unlocking predictive insights and accelerating discovery. Knowledge Graph Completion and Prediction : Enhance existing knowledge graphs and predict novel associations and interactions, paving the way for hypothesis generation and experimental validation. High-Quality Hypothesis Generation and Validation : Empower hypothesis generation with a foundation built upon comprehensive metabolite-centric knowledge, facilitating rigorous validation and driving scientific progress. And Beyond : Constantly evolving to meet the dynamic needs of the scientific community, MetaKG stands ready to support a myriad of endeavors aimed at unraveling the mysteries of metabolomics and advancing our understanding of biological systems. With MetaKG as their compass, researchers, developers, and data scientists embark on a journey of discovery, armed with the insights and tools needed to navigate the intricate landscape of metabolite-centric knowledge.","title":"What is the purpose of MetaKG"},{"location":"Overview%20of%20MetaKG/#how-can-you-use-metakg","text":"MetaKG is available as a website and a python package. You can use the website to search for metabolites and their associations with other entities. You can also use the python package to access the data programmatically. The python package provides an easy-to-use API to access the data in MetaKG. You can use the python package to construct knowledge graphs, train machine learning models, and perform statistical analysis on metabolite-centric data.","title":"How can you use MetaKG"},{"location":"MetaKG%20Python%20Package/Biological%20Analysis/","text":"Biological Analysis","title":"Biological Analysis"},{"location":"MetaKG%20Python%20Package/Biological%20Analysis/#biological-analysis","text":"","title":"Biological Analysis"},{"location":"MetaKG%20Python%20Package/How%20to%20update%20with%20LLM/","text":"How to update with LLM","title":"Updation with LLM"},{"location":"MetaKG%20Python%20Package/How%20to%20update%20with%20LLM/#how-to-update-with-llm","text":"","title":"How to update with LLM"},{"location":"MetaKG%20Python%20Package/Hypothesis%20Generation/","text":"Hypothesis Generation","title":"Hypothesis Generation"},{"location":"MetaKG%20Python%20Package/Hypothesis%20Generation/#hypothesis-generation","text":"","title":"Hypothesis Generation"},{"location":"MetaKG%20Python%20Package/Installation/","text":"Installation","title":"Installation"},{"location":"MetaKG%20Python%20Package/Installation/#installation","text":"","title":"Installation"},{"location":"MetaKG%20Python%20Package/KG%20Completion/","text":"KG Completion","title":"KG Completion"},{"location":"MetaKG%20Python%20Package/KG%20Completion/#kg-completion","text":"","title":"KG Completion"},{"location":"MetaKG%20Python%20Package/KG%20Construction/","text":"Construction","title":"Construction"},{"location":"MetaKG%20Python%20Package/KG%20Construction/#construction","text":"","title":"Construction"},{"location":"MetaKG%20Python%20Package/Meta2Vec%20Embedding/","text":"Meta2Vec Embedding Meta2Vec, as part of the MetaKG ecosystem, is an innovative tool designed to allocate embeddings for metabolites within the MetaKG knowledge graph. This tool applies the principles of representation learning to the field of metabolomics, aiming to capture the complex relationships and characteristics of metabolites in a form that can be easily utilized for computational analysis and machine learning applications. Getting Started with Meta2Vec We have developed a seperate Python package for meta2vec for instant use without building MetaKG. meta2vec is a Python package for metabolite embedding, which allows for the representation of metabolites in a vector space. meta2vec package contains three modules: distance : provides functions for calculating the similarity distance between two metabolites using their embeddings. utils : provides helper functions for working with HMDB (Human Metabolome Database) dataset. visualize : provides functions for visualizing the embeddings using UMAP. An example.ipynb is provides. Installation meta2vec package can be installed via pip : pip install meta2vec Usage Here is a brief overview of how to use meta2vec package: Load Pre-trained Embeddings from meta2vec import from_pretrained # Load the TransE pre-trained embeddings hmdb_embeddings = from_pretrained(model_type=\"TransE\", embedding_dir=\"embedding\") The above code loads the pre-trained HMDB embeddings from the embedding directory. If the embeddings are not already present in the directory, the function will download them from the GitHub repository. Calculate Distance between Two Metabolites from meta2vec import hmdb_id_cosine_distance, hmdb_id_euclidean_distance # Calculate the cosine distance between two HMDB IDs cosine_distance = hmdb_id_cosine_distance(hmdb_embeddings, \"HMDB0000001\", \"HMDB0000002\") # Calculate the Euclidean distance between two HMDB IDs euclidean_distance = hmdb_id_euclidean_distance(hmdb_embeddings, \"HMDB0000001\", \"HMDB0000002\") Find Most Similar Metabolites from meta2vec import most_similar # Find the most similar HMDB IDs to a given HMDB ID similar_compounds = most_similar(hmdb_embeddings, \"HMDB0000001\") Visualize Embeddings from meta2vec import visualize_umap # Visualize the embeddings using UMAP visualize_umap(hmdb_embeddings)","title":"Meta2Vec Embedding"},{"location":"MetaKG%20Python%20Package/Meta2Vec%20Embedding/#meta2vec-embedding","text":"Meta2Vec, as part of the MetaKG ecosystem, is an innovative tool designed to allocate embeddings for metabolites within the MetaKG knowledge graph. This tool applies the principles of representation learning to the field of metabolomics, aiming to capture the complex relationships and characteristics of metabolites in a form that can be easily utilized for computational analysis and machine learning applications.","title":"Meta2Vec Embedding"},{"location":"MetaKG%20Python%20Package/Meta2Vec%20Embedding/#getting-started-with-meta2vec","text":"We have developed a seperate Python package for meta2vec for instant use without building MetaKG. meta2vec is a Python package for metabolite embedding, which allows for the representation of metabolites in a vector space. meta2vec package contains three modules: distance : provides functions for calculating the similarity distance between two metabolites using their embeddings. utils : provides helper functions for working with HMDB (Human Metabolome Database) dataset. visualize : provides functions for visualizing the embeddings using UMAP. An example.ipynb is provides.","title":"Getting Started with Meta2Vec"},{"location":"MetaKG%20Python%20Package/Meta2Vec%20Embedding/#installation","text":"meta2vec package can be installed via pip : pip install meta2vec","title":"Installation"},{"location":"MetaKG%20Python%20Package/Meta2Vec%20Embedding/#usage","text":"Here is a brief overview of how to use meta2vec package:","title":"Usage"},{"location":"MetaKG%20Python%20Package/Meta2Vec%20Embedding/#load-pre-trained-embeddings","text":"from meta2vec import from_pretrained # Load the TransE pre-trained embeddings hmdb_embeddings = from_pretrained(model_type=\"TransE\", embedding_dir=\"embedding\") The above code loads the pre-trained HMDB embeddings from the embedding directory. If the embeddings are not already present in the directory, the function will download them from the GitHub repository.","title":"Load Pre-trained Embeddings"},{"location":"MetaKG%20Python%20Package/Meta2Vec%20Embedding/#calculate-distance-between-two-metabolites","text":"from meta2vec import hmdb_id_cosine_distance, hmdb_id_euclidean_distance # Calculate the cosine distance between two HMDB IDs cosine_distance = hmdb_id_cosine_distance(hmdb_embeddings, \"HMDB0000001\", \"HMDB0000002\") # Calculate the Euclidean distance between two HMDB IDs euclidean_distance = hmdb_id_euclidean_distance(hmdb_embeddings, \"HMDB0000001\", \"HMDB0000002\")","title":"Calculate Distance between Two Metabolites"},{"location":"MetaKG%20Python%20Package/Meta2Vec%20Embedding/#find-most-similar-metabolites","text":"from meta2vec import most_similar # Find the most similar HMDB IDs to a given HMDB ID similar_compounds = most_similar(hmdb_embeddings, \"HMDB0000001\")","title":"Find Most Similar Metabolites"},{"location":"MetaKG%20Python%20Package/Meta2Vec%20Embedding/#visualize-embeddings","text":"from meta2vec import visualize_umap # Visualize the embeddings using UMAP visualize_umap(hmdb_embeddings)","title":"Visualize Embeddings"},{"location":"MetaKG%20Python%20Package/MetaKGE/","text":"MetaKGE","title":"MetaKGE"},{"location":"MetaKG%20Python%20Package/MetaKGE/#metakge","text":"","title":"MetaKGE"},{"location":"MetaKG%20Python%20Package/Query%20and%20Search/","text":"Query and Search","title":"Query and Search"},{"location":"MetaKG%20Python%20Package/Query%20and%20Search/#query-and-search","text":"","title":"Query and Search"},{"location":"MetaKG%20Python%20Package/Quick%20Start/","text":"Quick Start Welcome to the Quick Start guide for the MetaKG Python package! This guide aims to help you get up and running with MetaKG as quickly as possible. By following the steps outlined below, you'll learn how to install MetaKG, perform basic queries, and start exploring the vast metabolite-centric knowledge graph. Step 1: Installation Before you begin, ensure you have Python 3.6 or later installed on your system. You can install the MetaKG package using pip, Python's package manager. Open your terminal or command prompt and run the following command: pip install metakg This command will download and install the MetaKG package along with its dependencies. Step 2: Importing MetaKG Once installed, you can import the MetaKG package into your Python script or interactive environment (such as Jupyter Notebook) using the following Python code: from metakg import MetaKG Step 3:","title":"Quick Start"},{"location":"MetaKG%20Python%20Package/Quick%20Start/#quick-start","text":"Welcome to the Quick Start guide for the MetaKG Python package! This guide aims to help you get up and running with MetaKG as quickly as possible. By following the steps outlined below, you'll learn how to install MetaKG, perform basic queries, and start exploring the vast metabolite-centric knowledge graph.","title":"Quick Start"},{"location":"MetaKG%20Python%20Package/Quick%20Start/#step-1-installation","text":"Before you begin, ensure you have Python 3.6 or later installed on your system. You can install the MetaKG package using pip, Python's package manager. Open your terminal or command prompt and run the following command: pip install metakg This command will download and install the MetaKG package along with its dependencies.","title":"Step 1: Installation"},{"location":"MetaKG%20Python%20Package/Quick%20Start/#step-2-importing-metakg","text":"Once installed, you can import the MetaKG package into your Python script or interactive environment (such as Jupyter Notebook) using the following Python code: from metakg import MetaKG","title":"Step 2: Importing MetaKG"},{"location":"MetaKG%20Python%20Package/Quick%20Start/#step-3","text":"","title":"Step 3:"},{"location":"MetaKG%20Python%20Package/Representation%20Training/","text":"Representation Training","title":"Representation Training"},{"location":"MetaKG%20Python%20Package/Representation%20Training/#representation-training","text":"","title":"Representation Training"},{"location":"MetaKG%20Website/Database%20Browse/","text":"","title":"Database Browse"},{"location":"MetaKG%20Website/Graph%20Visualization/","text":"","title":"Graph Visualization"},{"location":"MetaKG%20Website/Inference/","text":"","title":"Inference"},{"location":"MetaKG%20Website/Introduction/","text":"","title":"Introduction"},{"location":"MetaKG%20Website/Resources/","text":"","title":"Downloadable Resources"},{"location":"MetaKG%20Website/Search/","text":"","title":"Search"},{"location":"Open%20Resources/Open%20Resources/","text":"Open Resources","title":"Open Resources"},{"location":"Open%20Resources/Open%20Resources/#open-resources","text":"","title":"Open Resources"}]}